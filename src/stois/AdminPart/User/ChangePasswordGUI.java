/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stois.AdminPart.User;

import Controller.UsersJpaController;
import entity.Users;
import java.awt.Component;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import stois.AdminPart.AdminGUI;
import stois.AdminPart.Material.AddMaterialGUI;
import stois.Passport;

/**
 *
 * @author Milhouse
 */
public class ChangePasswordGUI extends javax.swing.JFrame {

    private EntityManagerFactory emf = null;
    private Users userEntity = new Users();

    /**
     * Creates new form ChangePasswordGUI
     *
     * @param emf
     * @param user
     */
    public ChangePasswordGUI(EntityManagerFactory emf, Users user) {
        this.emf = emf;
        this.userEntity = user;
        initComponents();
        setDefaultCloseOperation(AddMaterialGUI.DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPFCurrent = new javax.swing.JPasswordField();
        jPFNew = new javax.swing.JPasswordField();
        jPFConf = new javax.swing.JPasswordField();
        jTBConfim = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTBConfim.setText("Confirm new Password");
        jTBConfim.setMaximumSize(new java.awt.Dimension(119, 123));
        jTBConfim.setMinimumSize(new java.awt.Dimension(119, 123));
        jTBConfim.setPreferredSize(new java.awt.Dimension(141, 123));
        jTBConfim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBConfimActionPerformed(evt);
            }
        });

        jLabel1.setText("Current Password");

        jLabel2.setText("New Password");

        jLabel3.setText("Confirm new Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Change password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPFNew, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jPFCurrent)
                    .addComponent(jPFConf))
                .addGap(18, 18, 18)
                .addComponent(jTBConfim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPFCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPFNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPFConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jTBConfim, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings({"IncompatibleEquals", "ArrayEquals"})
    private void jTBConfimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBConfimActionPerformed
        // TODO add your handling code here:
        char[] curPass = jPFCurrent.getPassword();
        char[] newPass = jPFNew.getPassword();
        char[] confNewPass = jPFConf.getPassword();
        Passport pp = new Passport();

        if (Arrays.equals(newPass, confNewPass)) {
            try {
                if (pp.isItSamePassword(curPass, userEntity.getPasswordsalt(), userEntity.getPassword2())) {
                    UsersJpaController ujc = new UsersJpaController(emf);
                    String salt = null;
                    String passwordHash = null;
                    boolean problemSaltOrPassword = false;
                    // GENERATING NEW SALT
                    try {
                        salt = pp.getSalt();
                    } catch (NoSuchAlgorithmException ex) {
                        ex.printStackTrace();
                        problemSaltOrPassword = true;
                    }
                    if (!problemSaltOrPassword) {
                        // GENERATING PASSWD HASH
                        try {
                            passwordHash = pp.getHash(newPass, salt);
                        } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                            ex.printStackTrace();
                            problemSaltOrPassword = true;
                        }
                        if (!problemSaltOrPassword) {
                            //INSERTING TO DATABASE
                            boolean rollBack = false;
                            Users userToInsert = userEntity;
                            userToInsert.setPassword2(passwordHash);
                            userToInsert.setPasswordsalt(salt);
                            try {
                                
                                ujc.edit(userToInsert);
                            } catch (Exception ex) {
                                rollBack = true;
                                Component frame = new JFrame();
                                JOptionPane.showMessageDialog(frame,
                                        "Connection to database or changing password failed",
                                        "Inane error",
                                        JOptionPane.ERROR_MESSAGE);
                                
                            }
                            if (!rollBack) {
                                userEntity = userToInsert;
                            }
                            
                            //A tadz snad vracim nove upraveneho usera
                            AdminGUI mySuper = new AdminGUI();
                            mySuper.setUser(userEntity);
                             Component frame = new JFrame();
                                JOptionPane.showMessageDialog(frame,
                                        "Password changed",
                                        "Inane error",
                                        JOptionPane.INFORMATION_MESSAGE);
                                setVisible(false);
                        } else {
                            Component frame = new JFrame();
                            JOptionPane.showMessageDialog(frame,
                                    "Connection to database or changing password failed",
                                    "Inane error",
                                    JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        Component frame = new JFrame();
                        JOptionPane.showMessageDialog(frame,
                                "Generating salt failed",
                                "Inane error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    
                } else {
                    Component frame = new JFrame();
                    JOptionPane.showMessageDialog(frame,
                            "Current password is wrong. Try it again",
                            "Inane error",
                            JOptionPane.WARNING_MESSAGE);
                }
            } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                Logger.getLogger(ChangePasswordGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            Component frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
                    "New password and confirmation password are not same ",
                    "Inane error",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTBConfimActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ChangePasswordGUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPFConf;
    private javax.swing.JPasswordField jPFCurrent;
    private javax.swing.JPasswordField jPFNew;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jTBConfim;
    // End of variables declaration//GEN-END:variables
}
