/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stois.AdminPart.User;

import Controller.PersonsJpaController;
import Controller.UsersJpaController;
import entity.Addresses;
import entity.Persons;
import entity.Users;
import java.awt.Component;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import stois.Passport;

/**
 *
 * @author Milhouse
 */
public class AddUserGUI extends javax.swing.JFrame {

    /**
     * Creates new form AddUserGUI
     */
    private EntityManagerFactory emf = null;
    private static List<Persons> personsList = null;

    public AddUserGUI(EntityManagerFactory emf) {
        this.emf = emf;
        initComponents();
        getDataFromDatabase();
        setDefaultCloseOperation(AddUserGUI.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jBtnGetRandomPasswd = new javax.swing.JButton();
        jBtnAssign = new javax.swing.JButton();
        jTFUsername = new javax.swing.JTextField();
        jPFPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        listPersons = new java.awt.List();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Assign Username to Person");

        jBtnGetRandomPasswd.setText("Get random password");
        jBtnGetRandomPasswd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGetRandomPasswdActionPerformed(evt);
            }
        });

        jBtnAssign.setText("Assign to Person");
        jBtnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAssignActionPerformed(evt);
            }
        });

        jTFUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFUsernameActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setText("List available persons");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jBtnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(listPersons, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jBtnGetRandomPasswd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPFPassword)
                                        .addComponent(jTFUsername))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(9, 9, 9)
                        .addComponent(jPFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnGetRandomPasswd))
                    .addComponent(listPersons, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBtnAssign)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getDataFromDatabase() {
        listPersons.removeAll();
        PersonsJpaController pjc = new PersonsJpaController(emf);
        personsList = pjc.findPersonsEntitiesNotCanceledNotAssignet();
        personsList.stream().forEach((curPer) -> {
            listPersons.add(curPer.toString());
        });

    }
    private void jTFUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFUsernameActionPerformed

    private void jBtnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAssignActionPerformed
        UsersJpaController ujc = new UsersJpaController(emf);
        Passport pp = new Passport();
        String salt = null;
        String passwordHash = null;
        boolean problemSaltOrPassword = false;

        char[] passWd = jPFPassword.getPassword();
        String login = jTFUsername.getText();

        Persons persona = personsList.get(listPersons.getSelectedIndex());
        
        
        Users u = null;
        try {
            u = ujc.findUsersByUserName(login);
        } catch (Exception e) {
            Component frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
                    "Connection to database and searching in database faild",
                    "Inane error",
                    JOptionPane.WARNING_MESSAGE);
        }

        if (u == null) {
            Users userToInsert = new Users();
            userToInsert.setUsername(login);
            userToInsert.setPasswordanswer("Vsichni jsme gogo");
            userToInsert.setPersonsPersonid(persona);
            // GENERATING NEW SALT
            try {
                salt = pp.getSalt();
            } catch (NoSuchAlgorithmException ex) {
                ex.printStackTrace();
                problemSaltOrPassword = true;
            }

            if (!problemSaltOrPassword) {
                // GENERATING PASSWD HASH
                try {
                    passwordHash = pp.getHash(passWd, salt);
                } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                    ex.printStackTrace();
                    problemSaltOrPassword = true;
                }
                if (!problemSaltOrPassword) {
                    //INSERTING TO DATABASE
                    boolean rollBack = false;

                    userToInsert.setPassword2(passwordHash);
                    userToInsert.setPasswordsalt(salt);
                    try {

                        ujc.create(userToInsert);
                    } catch (Exception ex) {
                        rollBack = true;
                        Component frame = new JFrame();
                        JOptionPane.showMessageDialog(frame,
                                "Connection to database or creating new username failed",
                                "Inane error",
                                JOptionPane.ERROR_MESSAGE);

                    }
    }//GEN-LAST:event_jBtnAssignActionPerformed
            }
        } else {
            Component frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
                    "This Username exist",
                    "Inane error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    private void jBtnGetRandomPasswdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGetRandomPasswdActionPerformed
        Passport pp = new Passport();
        String randomPassword = pp.generateRandomPassword(12);
        jPFPassword.setText(randomPassword);
        Component frame = new JFrame();
        JOptionPane.showMessageDialog(frame,
                "Password is-> " + randomPassword,
                "Password",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jBtnGetRandomPasswdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddUserGUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAssign;
    private javax.swing.JButton jBtnGetRandomPasswd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPFPassword;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTFUsername;
    private java.awt.List listPersons;
    // End of variables declaration//GEN-END:variables
}
